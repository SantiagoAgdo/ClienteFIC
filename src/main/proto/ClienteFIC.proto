syntax = "proto3";

//Configs

option java_multiple_files = true;
option java_package = "com.mibanco.clientefic.es";
option java_outer_classname = "ClienteFICGrpc";

package ClienteFICGrpc;

//Types

message CrearClienteFICGrpc {
  AlertaType alerta = 1;
  ClienteBaseType clienteBase = 2;
  CentralRiesgoType centralRiesgo = 3;
  ContactoType contacto = 4;
  ConyugeType conyuge = 5;
  CupoRotativoType cupoRotativo = 6;
  int32 digitoVerificacion = 7;
  DomicilioEmpresaType domicilioEmpresa = 8;
  string estadoCivil = 9;
  string funcionarioUltimaActualizacion = 10;
  NegocioType negocio = 11;
  string numeroDocumentoRepresentanteLegal = 12;
  OfertaType oferta = 13;
  PasivoType pasivo = 14;
  PQRType PQR = 15;
  string prestamo = 16;
  string primerApellidoRepresentanteLegal = 17;
  string primerNombreRepresentanteLegal = 18;
  string razonSocial = 19;
  string segundoApellidoRepresentanteLegal = 20;
  string segundoNombreRepresentanteLegal = 21;
  bool seRequiereActualizacion = 22;
  string tipoDocumentoRepresentanteLegal = 23;
  float totalActivos = 24;
  string ultimaFechaActualizacion = 25;
  DomicilioType domicilio = 26;
}

message AlertaType {
  string tipoAlerta = 1;
  string banco = 2;
  string fecha = 3;
  string tipoDocumento = 4;
  string numeroDocumento = 5;
  string digitoVerificacion = 6;
}

message ClienteBaseType {
  int64 id = 1;
  int32 numeroCliente = 2;
  string tipoPersona = 3;
  string tipoDocumento = 4;
  int32 numeroDocumento = 5;
  string fechaExpedicionDocumento = 6;
  string primerNombre = 7;
  int32 numeroCelular = 8;
  string segundoNombre = 9;
  string primerApellido = 10;
  string segundoApellido = 11;
  string correoElectronico = 12;
}

message CentralRiesgoType{
  string antiguedadUbicacion = 1;
  string consultaDetallada = 2;
  string estadoDocumento = 3;
  string fechaConsultaMasReciente = 4;
  string fechaExpedicion = 5;
  string genero = 6;
  string lugarExpedicion = 7;
  string numeroDocumento = 8;
  string rangoEdad = 9;
  string resultadoConsultaMasReciente = 10;
  bool tieneRUT = 11;
  string tipoDocumento = 12;
  string tipoRelacion = 13;
  string tipoReporte = 14;
  bool vbVigenteParaSerConsultado = 15;
  string digitoVerificacion = 16;
  string historicoEndeudamiento = 17;
}

message ContactoType{
  string fecha = 1;
  string tipoContacto = 2;
  string resultadoComentarios = 3;
  int32 numeroCliente = 4;
}

message  ConyugeType{
  string tipoDocumento = 1;
  string numeroDocumento = 2;
  string primerNombre = 3;
  string segundoNombre = 4;
  string primerApellido = 5;
  string segundoApellido = 6;
  int32 numeroCliente = 7;
}

message  CupoRotativoType{
  string estado = 1;
  string fechaDeVencimiento = 2;
  float montoCupoCredito = 3;
  float montoUtilizado = 4;
  int32 numeroCliente = 5;
  string numeroCupo = 6;
  float saldoDisponible = 7;
}

message DirrecionTelefonoType{
  string direccion = 1;
  int32 telefono1 = 2;
  string tipoVivienda = 3;
  string tipoLocal = 4;
  string tipoDireccion = 5;
  string codigoDepartamento = 6;
  string codigoMunicipio = 7;
  string codigoBarrio = 8;
  int64 telefono2 = 9;
}

message DomicilioType{
  int32 numeroCliente = 1;
  string tipoVivienda = 2;
}

message DomicilioEmpresaType{
  int32 numeroCliente = 1;
  string tipoActividadCIIU = 2;
  string tipoLocal = 3;
}

message NegocioType{
  string direccion = 1;
  int32 telefono = 2;
  string tipoActividadCIIU = 3;
  int32 numeroCliente = 4;
}

message OfertaType{
  int32 numeroOferta = 1;
  string tipoLead = 2;
  string tipoOferta = 3;
  float monto = 4;
  int32 plazo = 5;
  int32 numeroCliente = 6;
  string tipoDeLiga = 7;
  string condicionGarantia = 8;
}

message PasivoType{
  string numeroProducto = 1;
  string subProducto = 2;
  string estadoPasivo = 3;
  string fechaApertura = 4;
  string fechaCierre = 5;
  float capital = 6;
  float intereses = 7;
  float otros = 8;
  float saldoTotal = 9;
  int32 numeroCliente = 10;
  string tipoProducto = 11;
}

message PQRType{
  string fecha = 1;
  int32 numeroPQR = 2;
  string motivo = 3;
  string resultadoPQR = 4;
  string comentario = 5;
  string digitoVerificacion = 6;
  string tipoDocumento = 7;
  string numeroDocumento = 8;
}

message ConsultaClienteByData{
  string tipoDocumento = 1;
  int32 numeroDocumento = 2;
  int32 digitoVerificacion = 3;
}

message NumeroCliente{
  int32 numeroCliente = 1;
}

//Responses

message ResponseClienteFIC{
  CrearClienteFICGrpc obj = 1;
}

message ResponseAlerta{
  repeated AlertaType obj = 1;
}

message ResponseCentralDeRiesgo{
  repeated CentralRiesgoType obj = 1;
}

message ResponsePQR{
  repeated PQRType obj = 1;
}

message ResponseConyuge{
  ConyugeType obj = 1;
}

message ResponseCupoRotativo{
  repeated CupoRotativoType obj = 1;
}

message ResponseHistorialContacto{
  repeated ContactoType obj = 1;
}

message ResponseDirrecionTelefono{
  repeated DirrecionTelefonoType obj = 1;
}

message ResponseOferta{
  repeated OfertaType obj = 1;
}

message ResponsePasivo{
  repeated PasivoType obj = 1;
}

message  ResponseCliente{
  CrearClienteFICGrpc cliente = 1;
}


//Services

service ClienteFICServiceGrpc {
  rpc clienteFIC(CrearClienteFICGrpc) returns (ResponseClienteFIC);
  rpc consultarAlerta(ConsultaClienteByData) returns (stream ResponseAlerta);
  rpc consultarCentralDeRiesgo(ConsultaClienteByData) returns (stream ResponseCentralDeRiesgo);
  rpc consultarPQR(ConsultaClienteByData) returns (stream ResponsePQR);
  rpc consutaClientePorIdentificacion(ConsultaClienteByData) returns (ResponseCliente); //---
  rpc consultarConyuge(NumeroCliente) returns (ResponseConyuge);
  rpc consultarCupoRotativo(NumeroCliente) returns (stream ResponseCupoRotativo);
  rpc consultarDireccionTelefono(NumeroCliente) returns (stream ResponseDirrecionTelefono);
  rpc consultarHistorialContacto(NumeroCliente) returns (stream ResponseHistorialContacto);
  rpc consultarOferta(NumeroCliente) returns (stream ResponseOferta);
  rpc consultarPasivo(NumeroCliente) returns (stream ResponsePasivo);
}


